Explain why doubling the size of the underlying array of your HashClass may be a poor idea.

When the computer accesses memory, the computer will grab a portion and cache it for faster access.
That portion works well for arrays because they are stored next to each other in memory, and that portion will have some of the array data.
If the array continues to double when a collision occurs, the new values that get pushed into the array can become further apart.
Which then it is more and more likely that the computer grabs less and less information from the array when it is piecing together that portion of data.
This causes more RAM lookups which are very slow.

... ["Empire Strikes Back"] = "Excellent" - Hash: 44
 ["A New Hope"] = "Average" - Hash: 43
 ["Return of the Jedi"] = "The Best" - Hash: 30
.. ["key"] = "value" - Hash: 1
. ["The Lord of the Rings: The Fellowship of the Ring"] = "3 hours, 48 minutes" - Hash: 5
 ["The Lord of the Rings: The Two Towers"] = "3 hours, 55 minutes" - Hash: 4
 ["The Lord of the Rings: The Fellowship of the Ring"] = "3 hours, 48 minutes" - Hash: 17
 ["The Lord of the Rings: The Two Towers"] = "3 hours, 55 minutes" - Hash: 4
.
